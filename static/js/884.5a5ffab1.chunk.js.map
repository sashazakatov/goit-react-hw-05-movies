{"version":3,"file":"static/js/884.5a5ffab1.chunk.js","mappings":"uUAEMA,EACQ,gCADRA,EAEG,mCAGIC,EAAS,mCAAG,sGACEC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,uBAAmD,CACtEG,OAAQ,CACJC,QAASJ,KAHI,cACfK,EADe,OAMdC,EAAWD,EAASE,KAApBD,QANc,kBAOdA,GAPc,2CAAH,qDAUTE,EAAW,mCAAG,2GAAMC,EAAN,+BAAc,GAAd,SACAP,EAAAA,EAAAA,IAAA,UAAaF,EAAb,gBAA4C,CAC/DG,OAAQ,CACJC,QAASJ,EACTS,MAAAA,KAJe,cACjBJ,EADiB,OAOhBC,EAAWD,EAASE,KAApBD,QAPgB,kBAQhBA,GARgB,2CAAH,qDAWXI,EAAiB,mCAAG,yGAAMC,EAAN,+BAAgB,GAAhB,SACNT,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAAqCW,GAAW,CACnER,OAAQ,CACJC,QAASJ,KAHY,cACvBK,EADuB,yBAMtBA,EAASE,MANa,2CAAH,qDASjBK,EAAY,mCAAG,yGAAMD,EAAN,+BAAgB,GAAhB,SACDT,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAAqCW,EAArC,YAAwD,CAC3ER,OAAQ,CACJC,QAASJ,KAHO,cAClBK,EADkB,yBAMjBA,EAASE,KAAKM,MANG,2CAAH,qDASZC,EAAY,mCAAG,2GAAMH,EAAN,+BAAgB,GAAhB,SACDT,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAAsCW,EAAtC,YAAwD,CAC3ER,OAAQ,CACJC,QAASJ,KAHO,cAClBK,EADkB,OAMhBC,EAAYD,EAASE,KAArBD,QANgB,kBAOjBA,GAPiB,2CAAH,qDAUZS,EAAkB,mCAAG,sGACPb,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA6C,CAChEG,OAAQ,CACJC,QAASJ,KAHa,cACxBK,EADwB,OAMvBW,EAAUX,EAASE,KAAnBS,OANuB,kBAOvBA,GAPuB,2CAAH,oD,sDCxDxB,IAAMC,EAAa,CACtBC,SAAU,EACVC,UAAW,EACXC,MAAO,EACPC,QAAS,EACTC,OAAQ,EACRC,IAAK,EACLC,QAAS,EACTC,SAAU,E,wGC2Cd,UA7CqB,WAAO,IAAD,IAChBd,GAAWe,EAAAA,EAAAA,IAAU,IAArBf,QACP,GAA0BgB,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAUC,EAAAA,EAAAA,QAAO,MACjBC,GAAYD,EAAAA,EAAAA,QAAO,MAEnBE,EAAQ,qBADGC,EAAAA,EAAAA,MACSC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAezC,OAbAC,EAAAA,EAAAA,YAAU,YACNtB,EAAAA,EAAAA,MACCuB,MAAK,YAAiC,IAA/BC,EAA8B,EAA9BA,eAAgBC,EAAc,EAAdA,SACpBV,EAAQW,QAAUD,EAClBR,EAAUS,QAAUF,EAAetB,EAAAA,EAAAA,SACtC,KAEDP,EAAAA,EAAAA,IAAkBC,GACjB2B,MAAK,gBAAEI,EAAF,EAAEA,MAAOC,EAAT,EAASA,aAAcC,EAAvB,EAAuBA,YAAaC,EAApC,EAAoCA,SAAUC,EAA9C,EAA8CA,OAAQC,EAAtD,EAAsDA,aAAtD,OACFlB,EAAS,CAACa,MAAAA,EAAOC,aAAAA,EAAcC,YAAAA,EAAaC,SAAAA,EAAUC,OAAAA,EAAQC,aAAAA,GAD5D,GAGT,GAAE,CAACpC,KAGA,gCACMiB,IAAS,SAAC,IAAD,IACVA,IAAU,iCACP,SAAC,KAAD,CAASoB,GAAIf,EAAb,sBACA,0BAAKL,EAAMc,MAAX,KAAoBd,EAAMe,aAAaM,MAAM,EAAG,GAAhD,QACA,gBAAKC,IAAG,UAAKpB,EAAQW,SAAb,OAAuBT,EAAUS,SAAjC,OAA2Cb,EAAMgB,aAAeO,IAAKvB,EAAMc,SACnF,wCAAgBU,SAA8B,GAArBxB,EAAMmB,cAA/B,QACA,sCACA,8BAAInB,QAAJ,IAAIA,OAAJ,EAAIA,EAAOiB,YACX,oCACA,+BACKjB,QADL,IACKA,OADL,EACKA,EAAOkB,OAAOO,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,KAAN,OAAgB,wBAAcA,GAALD,EAAzB,OAEvB,mDACA,SAAC,KAAD,CAASN,GAAG,OAAZ,mBACA,SAAC,KAAD,CAASA,GAAG,UAAZ,sBACA,SAAC,EAAAQ,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACI,SAAC,KAAD,WAKnB,C","sources":["Api/Api.js","options/sizeImage.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst consts = {\n    BASE_URL: 'https://api.themoviedb.org/3/',\n    KEY: '053b6502bd056126a1f9a95166dc9ace',\n}\n\nexport const fetchHome = async() => {\n    const response = await axios.get(`${consts.BASE_URL}trending/movie/week`, {\n        params: {\n            api_key: consts.KEY,\n        }\n    })\n    const {results} = response.data;\n    return results;\n}\n\nexport const fetchMovies = async(query = '') => {\n    const response = await axios.get(`${consts.BASE_URL}search/movie`, {\n        params: {\n            api_key: consts.KEY,\n            query,\n        }\n    })\n    const {results} = response.data;\n    return results;\n}\n\nexport const fetchMovieDetails = async(movieId = '') => {\n    const response = await axios.get(`${consts.BASE_URL}movie/${movieId}`, {\n        params: {\n            api_key: consts.KEY,\n        }\n    })\n    return response.data;\n}\n\nexport const fetchCredits = async(movieId = '') => {\n    const response = await axios.get(`${consts.BASE_URL}movie/${movieId}/credits`, {\n        params: {\n            api_key: consts.KEY,\n        }\n    })\n    return response.data.cast;\n}\n\nexport const fetchReviews = async(movieId = '')=>{\n    const response = await axios.get(`${consts.BASE_URL}/movie/${movieId}/reviews`,{\n        params: {\n            api_key: consts.KEY,\n        }\n    })\n    const { results } = response.data;\n    return results;\n}\n\nexport const fetch小onfiguration = async() => {\n    const response = await axios.get(`${consts.BASE_URL}configuration`, {\n        params: {\n            api_key: consts.KEY,\n        }\n    })\n    const {images} = response.data\n    return images;\n}","export const sizeImages = {\n    SMALLEST: 0,\n    LESSSMALL: 1,\n    SMALL: 2,\n    AVERAGE: 3,\n    LARGER: 4,\n    BIG: 5,\n    BIGGEST: 6,\n    ORIGINAL: 7,\n}","import { useEffect, useState, useRef, Suspense } from \"react\";\nimport { Outlet, NavLink, useParams, useLocation } from \"react-router-dom\";\nimport { fetch小onfiguration, fetchMovieDetails } from 'Api';\nimport { sizeImages } from 'options/sizeImage';\nimport Loader from \"components/Loader\";\n\nconst MovieDetails = () => {\n    const {movieId} = useParams('');\n    const [movie, setMovie] = useState(null);\n    const baseUrl = useRef(null);\n    const imageSize = useRef(null);\n    const location = useLocation();\n    const backLink = location.state?.from ?? '/'; \n\n    useEffect(()=>{\n        fetch小onfiguration()\n        .then(({backdrop_sizes, base_url}) => {\n            baseUrl.current = base_url; \n            imageSize.current = backdrop_sizes[sizeImages.SMALLEST];\n        });\n\n        fetchMovieDetails(movieId)\n        .then(({title, release_date, poster_path, overview, genres, vote_average}) =>\n            setMovie({title, release_date, poster_path, overview, genres, vote_average})\n        )\n    }, [movieId])\n\n    return(\n        <section>\n            {!movie && <Loader/>}\n            {movie &&  <>\n                <NavLink to={backLink}>Go back</NavLink>\n                <h1>{movie.title} ({movie.release_date.slice(0, 4)})</h1>\n                <img src={`${baseUrl.current}${imageSize.current}${movie.poster_path}`} alt={movie.title} />\n                <p>User Score: {parseInt(movie.vote_average * 10)}%</p>\n                <h2>Overview</h2>\n                <p>{movie?.overview}</p>\n                <h2>Genres</h2>\n                <ul>\n                    {movie?.genres.map(({id, name}) => <li key={id}>{name}</li>)}\n                </ul>\n                <p>Additional infoemation</p>\n                <NavLink to='cast'>Cast</NavLink>\n                <NavLink to='reviews'>Reviews</NavLink>\n                <Suspense fallback={<Loader/>}>\n                    <Outlet />\n                </Suspense>\n            </>}\n        </section>\n    )\n}\nexport default MovieDetails;"],"names":["consts","fetchHome","axios","params","api_key","response","results","data","fetchMovies","query","fetchMovieDetails","movieId","fetchCredits","cast","fetchReviews","fetch小onfiguration","images","sizeImages","SMALLEST","LESSSMALL","SMALL","AVERAGE","LARGER","BIG","BIGGEST","ORIGINAL","useParams","useState","movie","setMovie","baseUrl","useRef","imageSize","backLink","useLocation","state","from","useEffect","then","backdrop_sizes","base_url","current","title","release_date","poster_path","overview","genres","vote_average","to","slice","src","alt","parseInt","map","id","name","Suspense","fallback"],"sourceRoot":""}