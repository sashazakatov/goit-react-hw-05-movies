{"version":3,"file":"static/js/877.3c7b4305.chunk.js","mappings":"uUAEMA,EACQ,gCADRA,EAEG,mCAGIC,EAAS,mCAAG,sGACEC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,uBAAmD,CACtEG,OAAQ,CACJC,QAASJ,KAHI,cACfK,EADe,OAMdC,EAAWD,EAASE,KAApBD,QANc,kBAOdA,GAPc,2CAAH,qDAUTE,EAAW,mCAAG,2GAAMC,EAAN,+BAAc,GAAd,SACAP,EAAAA,EAAAA,IAAA,UAAaF,EAAb,gBAA4C,CAC/DG,OAAQ,CACJC,QAASJ,EACTS,MAAAA,KAJe,cACjBJ,EADiB,OAOhBC,EAAWD,EAASE,KAApBD,QAPgB,kBAQhBA,GARgB,2CAAH,qDAWXI,EAAiB,mCAAG,yGAAMC,EAAN,+BAAgB,GAAhB,SACNT,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAAqCW,GAAW,CACnER,OAAQ,CACJC,QAASJ,KAHY,cACvBK,EADuB,yBAMtBA,EAASE,MANa,2CAAH,qDASjBK,EAAY,mCAAG,yGAAMD,EAAN,+BAAgB,GAAhB,SACDT,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAAqCW,EAArC,YAAwD,CAC3ER,OAAQ,CACJC,QAASJ,KAHO,cAClBK,EADkB,yBAMjBA,EAASE,KAAKM,MANG,2CAAH,qDASZC,EAAY,mCAAG,2GAAMH,EAAN,+BAAgB,GAAhB,SACDT,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAAsCW,EAAtC,YAAwD,CAC3ER,OAAQ,CACJC,QAASJ,KAHO,cAClBK,EADkB,OAMhBC,EAAYD,EAASE,KAArBD,QANgB,kBAOjBA,GAPiB,2CAAH,qDAUZS,EAAkB,mCAAG,sGACPb,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA6C,CAChEG,OAAQ,CACJC,QAASJ,KAHa,cACxBK,EADwB,OAMvBW,EAAUX,EAASE,KAAnBS,OANuB,kBAOvBA,GAPuB,2CAAH,oD,6HCzB/B,EA1Ba,WACT,IAAOL,GAAWM,EAAAA,EAAAA,MAAXN,QACP,GAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAUC,EAAAA,EAAAA,UACVC,GAAYD,EAAAA,EAAAA,UAYlB,OAVAE,EAAAA,EAAAA,YAAU,YACNZ,EAAAA,EAAAA,IAAaD,GACZc,MAAK,SAAAZ,GAAI,OAAIO,EAAWP,EAAf,KAEVE,EAAAA,EAAAA,MACCU,MAAK,YAA6B,IAA3BC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,SAChBN,EAAQO,QAAUD,EAClBJ,EAAUK,QAAUF,EAAWG,EAAAA,EAAAA,UAClC,GACJ,GAAE,CAAClB,KAEA,wBACKQ,EAAQW,KAAI,SAACC,GAAD,aAAY,2BACrB,gBAAKC,IAAG,UAAKX,EAAQO,SAAb,OAAuBL,EAAUK,SAAjC,iBAA2CG,EAAOE,oBAAlD,QAAkE,IAAMC,IAAKH,EAAOI,QAC5F,uBAAIJ,EAAOI,QACX,uCAAeJ,EAAOK,eAHQL,EAAOM,GAA5B,KAOxB,C,sDC9BM,IAAMR,EAAa,CACtBS,SAAU,EACVC,UAAW,EACXC,MAAO,EACPC,QAAS,EACTC,OAAQ,EACRC,IAAK,EACLC,QAAS,EACTC,SAAU,E","sources":["Api/Api.js","components/Cast/Cast.jsx","options/sizeImage.js"],"sourcesContent":["import axios from 'axios';\n\nconst consts = {\n    BASE_URL: 'https://api.themoviedb.org/3/',\n    KEY: '053b6502bd056126a1f9a95166dc9ace',\n}\n\nexport const fetchHome = async() => {\n    const response = await axios.get(`${consts.BASE_URL}trending/movie/week`, {\n        params: {\n            api_key: consts.KEY,\n        }\n    })\n    const {results} = response.data;\n    return results;\n}\n\nexport const fetchMovies = async(query = '') => {\n    const response = await axios.get(`${consts.BASE_URL}search/movie`, {\n        params: {\n            api_key: consts.KEY,\n            query,\n        }\n    })\n    const {results} = response.data;\n    return results;\n}\n\nexport const fetchMovieDetails = async(movieId = '') => {\n    const response = await axios.get(`${consts.BASE_URL}movie/${movieId}`, {\n        params: {\n            api_key: consts.KEY,\n        }\n    })\n    return response.data;\n}\n\nexport const fetchCredits = async(movieId = '') => {\n    const response = await axios.get(`${consts.BASE_URL}movie/${movieId}/credits`, {\n        params: {\n            api_key: consts.KEY,\n        }\n    })\n    return response.data.cast;\n}\n\nexport const fetchReviews = async(movieId = '')=>{\n    const response = await axios.get(`${consts.BASE_URL}/movie/${movieId}/reviews`,{\n        params: {\n            api_key: consts.KEY,\n        }\n    })\n    const { results } = response.data;\n    return results;\n}\n\nexport const fetch小onfiguration = async() => {\n    const response = await axios.get(`${consts.BASE_URL}configuration`, {\n        params: {\n            api_key: consts.KEY,\n        }\n    })\n    const {images} = response.data\n    return images;\n}","import { useEffect, useState, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchCredits, fetch小onfiguration } from 'Api'\nimport { sizeImages } from 'options/sizeImage' \n\nconst Cast = () => {\n    const {movieId} = useParams();\n    const [credits, setCredits] = useState([]);\n    const baseUrl = useRef();\n    const imageSize = useRef();\n\n    useEffect(()=>{\n        fetchCredits(movieId)\n        .then(cast => setCredits(cast));\n\n        fetch小onfiguration()\n        .then(({logo_sizes, base_url}) => {\n            baseUrl.current = base_url;\n            imageSize.current = logo_sizes[sizeImages.LESSSMALL];\n        })\n    }, [movieId])\n    return(\n        <ul>\n            {credits.map((credit) => <li key={credit.id}>\n                <img src={`${baseUrl.current}${imageSize.current}${credit.profile_path ?? ''}`} alt={credit.name} />\n                <p>{credit.name}</p>\n                <p>Character: {credit.character}</p>\n            </li>)}\n        </ul>\n    )\n}\nexport default Cast;","export const sizeImages = {\n    SMALLEST: 0,\n    LESSSMALL: 1,\n    SMALL: 2,\n    AVERAGE: 3,\n    LARGER: 4,\n    BIG: 5,\n    BIGGEST: 6,\n    ORIGINAL: 7,\n}"],"names":["consts","fetchHome","axios","params","api_key","response","results","data","fetchMovies","query","fetchMovieDetails","movieId","fetchCredits","cast","fetchReviews","fetch小onfiguration","images","useParams","useState","credits","setCredits","baseUrl","useRef","imageSize","useEffect","then","logo_sizes","base_url","current","sizeImages","map","credit","src","profile_path","alt","name","character","id","SMALLEST","LESSSMALL","SMALL","AVERAGE","LARGER","BIG","BIGGEST","ORIGINAL"],"sourceRoot":""}